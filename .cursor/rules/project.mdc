---
description: 
globs: 
alwaysApply: false
---
---
description: 项目基本信息
globs: ['*"]
alwaysApply: false
---
# 📄 项目需求文档：基于 FastMCP 的威胁情报查询服务

## 🧭 项目概述

本项目旨在构建一个基于 FastMCP 的 MCP Server，提供查询 IP 地址、URL 或文件哈希（MD5、SHA1、SHA256）等信息的威胁情报数据服务。该服务将集成多个威胁情报平台的 API，供安全分析人员和系统管理员使用，以提升威胁识别和响应的效率。

## 🎯 项目目标

- 支持通过 MCP 协议接收查询请求。
- 集成多个威胁情报平台的 API，提供丰富的查询结果。
- 支持查询 IP、URL 和文件哈希，返回相关的威胁情报信息。
- 确保系统的可扩展性和安全性，便于后续功能的拓展和维护。

## 🧩 核心功能模块

### 1. 查询处理模块

- 接收并解析来自 MCP 客户端的查询请求。
- 支持的查询类型包括：
  - IP 地址（IPv4/IPv6）
  - URL
  - 文件哈希（MD5、SHA1、SHA256）
- 对输入进行格式验证，确保查询参数的合法性。

### 2. 威胁情报集成模块

- 集成以下威胁情报平台的 API：
  - VirusTotal
  - AbuseIPDB
  - Hybrid Analysis
  - URLScan.io
  - ThreatFox
  - IPinfo
  - Shodan（可选）
- 为每个平台的 API 调用实现异步处理，提升查询效率。
- 对各平台的返回结果进行标准化处理，统一数据结构。

### 3. 结果聚合与返回模块

- 将各平台的查询结果进行聚合，形成统一的响应结构。
- 包括以下信息：
  - 威胁等级评分
  - 相关标签（如恶意软件、钓鱼等）
  - 地理位置信息
  - 历史活动记录
- 通过 MCP 协议将聚合结果返回给客户端。

### 4. 日志与审计模块

- 记录每次查询的详细日志，包括查询参数、时间戳、调用的 API 及其响应状态。
- 支持日志的存储和检索，便于审计和问题排查。

## 🛠 技术选型

- **编程语言**：Python 3.10+
- **框架**：FastMCP（基于 MCP 协议的服务器框架）
- **异步处理**：使用 `asyncio` 和 `httpx` 实现异步 API 调用
- **配置管理**：使用 `pydantic` 进行配置项的管理和验证
- **日志记录**：使用 Python 标准库的 `logging` 模块




